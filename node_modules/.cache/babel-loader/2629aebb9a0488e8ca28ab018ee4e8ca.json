{"ast":null,"code":"var _jsxFileName = \"/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\n\nfunction CreateBeerForm() {\n  const [beerName, setBeerName] = useState('');\n  const [beerNameError, setBeerNameError] = useState('');\n  const [beerType, setBeerType] = useState('');\n  const [beerTypeError, setBeerTypeError] = useState('');\n  const [hasCorn, setHasCorn] = useState(false);\n  const [ingredients, setIngredients] = useState('');\n  const [disable, setDisabled] = useState(true);\n  const firstRender = useRef(true);\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n\n    setDisabled(formValidation());\n  }, [beerName, beerType, ingredients]);\n\n  const formValidation = () => {\n    if (beerName === \"\") {\n      setBeerNameError('Beer name cannot be empty');\n      return true;\n    } else {\n      setBeerNameError('');\n      return false;\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    console.log(\"beerName:\" + beerName, \"beerName:\" + beerType, \"beerName:\" + hasCorn, \"beerName:\" + ingredients);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, beerNameError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, beerNameError), React.createElement(FormTextInput, {\n    value: beerName,\n    onChange: event => setBeerName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, beerTypeError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, beerTypeError), React.createElement(FormSelect, {\n    value: beerType,\n    onChange: event => setBeerType(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(FormCheckbox, {\n    value: hasCorn,\n    onChange: event => setHasCorn(event.target.value ? event.target.checked : event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(FormTextArea, {\n    value: ingredients,\n    onChange: event => setIngredients(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: disable,\n    type: \"submit\",\n    \"data-test\": \"formSubmit\",\n    name: \"formSubmit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default CreateBeerForm;","map":{"version":3,"sources":["/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx"],"names":["React","useState","useRef","useEffect","FormTextInput","FormSelect","FormCheckbox","FormTextArea","CreateBeerForm","beerName","setBeerName","beerNameError","setBeerNameError","beerType","setBeerType","beerTypeError","setBeerTypeError","hasCorn","setHasCorn","ingredients","setIngredients","disable","setDisabled","firstRender","current","formValidation","onSubmit","event","preventDefault","console","log","target","value","checked"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,UAAP,MAAuB,+BAAvB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;AACA,OAAOC,YAAP,MAAyB,iCAAzB;;AAEA,SAASC,cAAT,GAA0B;AAEtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACU,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACY,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAACgB,OAAD,EAAUC,UAAV,IAAwBjB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAACoB,OAAD,EAAUC,WAAV,IAAyBrB,QAAQ,CAAC,IAAD,CAAvC;AACA,QAAMsB,WAAW,GAAGrB,MAAM,CAAC,IAAD,CAA1B;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIoB,WAAW,CAACC,OAAhB,EAAyB;AACrBD,MAAAA,WAAW,CAACC,OAAZ,GAAsB,KAAtB;AACA;AACH;;AACDF,IAAAA,WAAW,CAACG,cAAc,EAAf,CAAX;AAEH,GAPQ,EAON,CAAChB,QAAD,EAAWI,QAAX,EAAqBM,WAArB,CAPM,CAAT;;AASA,QAAMM,cAAc,GAAG,MAAM;AACzB,QAAIhB,QAAQ,KAAK,EAAjB,EAAqB;AACjBG,MAAAA,gBAAgB,CAAC,2BAAD,CAAhB;AACA,aAAO,IAAP;AACH,KAHD,MAGO;AACHA,MAAAA,gBAAgB,CAAC,EAAD,CAAhB;AACA,aAAO,KAAP;AACH;AACJ,GARD;;AAUA,QAAMc,QAAQ,GAAIC,KAAD,IAAgB;AAC7BA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CACI,cAAcrB,QADlB,EAEI,cAAcI,QAFlB,EAGI,cAAcI,OAHlB,EAII,cAAcE,WAJlB;AAMH,GARD;;AAUA,SACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEO,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,aAAa,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,aAAJ,CADtB,EAEI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEF,QAAtB;AAAgC,IAAA,QAAQ,EAAEkB,KAAK,IAAIjB,WAAW,CAACiB,KAAK,CAACI,MAAN,CAAaC,KAAd,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKjB,aAAa,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIA,aAAJ,CADtB,EAEI,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAEF,QAAnB;AAA6B,IAAA,QAAQ,EAAEc,KAAK,IAAIb,WAAW,CAACa,KAAK,CAACI,MAAN,CAAaC,KAAd,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CALJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEf,OAArB;AAA8B,IAAA,QAAQ,EAAEU,KAAK,IAAIT,UAAU,CAACS,KAAK,CAACI,MAAN,CAAaC,KAAb,GAAqBL,KAAK,CAACI,MAAN,CAAaE,OAAlC,GAA4CN,KAAK,CAACI,MAAN,CAAaC,KAA1D,CAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CATJ,EAYI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAEb,WAArB;AAAkC,IAAA,QAAQ,EAAEQ,KAAK,IAAIP,cAAc,CAACO,KAAK,CAACI,MAAN,CAAaC,KAAd,CAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAZJ,EAeI;AAAQ,IAAA,QAAQ,EAAEX,OAAlB;AAA2B,IAAA,IAAI,EAAC,QAAhC;AAAyC,iBAAU,YAAnD;AAAgE,IAAA,IAAI,EAAC,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ,CADJ;AAmBH;;AAED,eAAeb,cAAf","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\n\nfunction CreateBeerForm() {\n\n    const [beerName, setBeerName] = useState('');\n    const [beerNameError, setBeerNameError] = useState('');\n    const [beerType, setBeerType] = useState('');\n    const [beerTypeError, setBeerTypeError] = useState('');\n    const [hasCorn, setHasCorn] = useState(false);\n    const [ingredients, setIngredients] = useState('');\n    const [disable, setDisabled] = useState(true);\n    const firstRender = useRef(true);\n\n    useEffect(() => {\n        if (firstRender.current) {\n            firstRender.current = false\n            return\n        }\n        setDisabled(formValidation())\n\n    }, [beerName, beerType, ingredients])\n\n    const formValidation = () => {\n        if (beerName === \"\") {\n            setBeerNameError('Beer name cannot be empty')\n            return true\n        } else {\n            setBeerNameError('')\n            return false\n        }\n    }\n\n    const onSubmit = (event: any) => {\n        event.preventDefault();\n        console.log(\n            \"beerName:\" + beerName,\n            \"beerName:\" + beerType,\n            \"beerName:\" + hasCorn,\n            \"beerName:\" + ingredients\n        );\n    };\n\n    return (\n        <form className=\"form\" onSubmit={onSubmit}>\n            <div>\n                {beerNameError && <p>{beerNameError}</p>}\n                <FormTextInput value={beerName} onChange={event => setBeerName(event.target.value)} />\n            </div>\n            <div>\n                {beerTypeError && <p>{beerTypeError}</p>}\n                <FormSelect value={beerType} onChange={event => setBeerType(event.target.value)} />\n            </div>\n            <div>\n                <FormCheckbox value={hasCorn} onChange={event => setHasCorn(event.target.value ? event.target.checked : event.target.value)} />\n            </div>\n            <div>\n                <FormTextArea value={ingredients} onChange={event => setIngredients(event.target.value)} />\n            </div>\n            <button disabled={disable} type=\"submit\" data-test=\"formSubmit\" name=\"formSubmit\" >Submit</button>\n        </form>\n    )\n}\n\nexport default CreateBeerForm;"]},"metadata":{},"sourceType":"module"}