{"ast":null,"code":"var _jsxFileName = \"/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx\";\nimport React, { useState } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\n\nfunction CreateBeerForm() {\n  const [beerName, setUBeerName] = useState('');\n  const [beerType, setUBeerType] = useState('');\n  const [hasCorn, setHasCorn] = useState(false);\n  const [ingredients, setIngredients] = useState('');\n\n  const validation = value => {\n    let errors = {};\n\n    if (value.beerName.trim() === '') {\n      errors.beerName = \"value cannot be empty\";\n    }\n\n    if (value.ingredients.trim() === '') {\n      errors.ingredients = \"value cannot be empty\";\n    }\n\n    if (value.ingredients.trim() === '') {\n      errors.ingredients = \"value cannot be empty\";\n    }\n\n    return errors;\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"beerName:\" + beerName, \"beerName:\" + beerType, \"beerName:\" + hasCorn, \"beerName:\" + ingredients);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(FormTextInput, {\n    value: beerName,\n    onChange: event => setUBeerName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), errors.beerName && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, errors.beerName), React.createElement(FormSelect, {\n    value: beerType,\n    onChange: event => setUBeerType(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(FormCheckbox, {\n    value: hasCorn,\n    onChange: event => setHasCorn(event.target.value ? event.target.checked : event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(FormTextArea, {\n    value: ingredients,\n    onChange: event => setIngredients(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    \"data-test\": \"formSubmit\",\n    name: \"formSubmit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default CreateBeerForm;","map":{"version":3,"sources":["/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx"],"names":["React","useState","FormTextInput","FormSelect","FormCheckbox","FormTextArea","CreateBeerForm","beerName","setUBeerName","beerType","setUBeerType","hasCorn","setHasCorn","ingredients","setIngredients","validation","value","errors","trim","handleSubmit","event","preventDefault","console","log","target","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\nimport { ErrorMessage } from 'formik';\n\nfunction CreateBeerForm() {\n\n    const [beerName, setUBeerName] = useState('');\n    const [beerType, setUBeerType] = useState('');\n    const [hasCorn, setHasCorn] = useState(false);\n    const [ingredients, setIngredients] = useState('');\n\n    const validation = (value) =>{\n        let errors = {}\n        if(value.beerName.trim() === ''){\n            errors.beerName = \"value cannot be empty\";\n        }\n        if(value.ingredients.trim() === ''){\n            errors.ingredients = \"value cannot be empty\";\n        }\n        if(value.ingredients.trim() === ''){\n            errors.ingredients = \"value cannot be empty\";\n        }\n        return errors;\n    }\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault();\n        console.log(\n            \"beerName:\" + beerName,\n            \"beerName:\" + beerType,\n            \"beerName:\" + hasCorn,\n            \"beerName:\" + ingredients\n        );\n    };\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <FormTextInput value={beerName} onChange={event => setUBeerName(event.target.value)} />\n            {errors.beerName && <p>{errors.beerName}</p>}\n            <FormSelect value={beerType} onChange={event => setUBeerType(event.target.value)} />\n            <FormCheckbox value={hasCorn}\n                onChange={event =>\n                    setHasCorn(event.target.value ? event.target.checked : event.target.value)\n                }\n            />\n            <FormTextArea value={ingredients} onChange={event => setIngredients(event.target.value)} />\n            <button type=\"submit\" data-test=\"formSubmit\" name=\"formSubmit\">Submit</button>\n        </form>\n    )\n}\n\nexport default CreateBeerForm;"]},"metadata":{},"sourceType":"module"}