{"ast":null,"code":"import { swalClasses } from '../../classes.js';\nimport { warn, error, isPromise } from '../../utils.js';\nimport * as dom from '../../dom/index.js';\nimport privateProps from '../../../privateProps.js';\nconst inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea'];\nexport const renderInput = (instance, params) => {\n  const content = dom.getContent();\n  const innerParams = privateProps.innerParams.get(instance);\n  const rerender = !innerParams || params.input !== innerParams.input;\n  inputTypes.forEach(inputType => {\n    const inputClass = swalClasses[inputType];\n    const inputContainer = dom.getChildByClass(content, inputClass); // set attributes\n\n    setAttributes(inputType, params.inputAttributes); // set class\n\n    inputContainer.className = inputClass;\n\n    if (rerender) {\n      dom.hide(inputContainer);\n    }\n  });\n\n  if (params.input) {\n    if (rerender) {\n      showInput(params);\n    } // set custom class\n\n\n    setCustomClass(params);\n  }\n};\n\nconst showInput = params => {\n  if (!renderInputType[params.input]) {\n    return error(`Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`);\n  }\n\n  const inputContainer = getInputContainer(params.input);\n  const input = renderInputType[params.input](inputContainer, params);\n  dom.show(input); // input autofocus\n\n  setTimeout(() => {\n    dom.focusInput(input);\n  });\n};\n\nconst removeAttributes = input => {\n  for (let i = 0; i < input.attributes.length; i++) {\n    const attrName = input.attributes[i].name;\n\n    if (!['type', 'value', 'style'].includes(attrName)) {\n      input.removeAttribute(attrName);\n    }\n  }\n};\n\nconst setAttributes = (inputType, inputAttributes) => {\n  const input = dom.getInput(dom.getContent(), inputType);\n\n  if (!input) {\n    return;\n  }\n\n  removeAttributes(input);\n\n  for (const attr in inputAttributes) {\n    // Do not set a placeholder for <input type=\"range\">\n    // it'll crash Edge, #1298\n    if (inputType === 'range' && attr === 'placeholder') {\n      continue;\n    }\n\n    input.setAttribute(attr, inputAttributes[attr]);\n  }\n};\n\nconst setCustomClass = params => {\n  const inputContainer = getInputContainer(params.input);\n\n  if (params.customClass) {\n    dom.addClass(inputContainer, params.customClass.input);\n  }\n};\n\nconst setInputPlaceholder = (input, params) => {\n  if (!input.placeholder || params.inputPlaceholder) {\n    input.placeholder = params.inputPlaceholder;\n  }\n};\n\nconst getInputContainer = inputType => {\n  const inputClass = swalClasses[inputType] ? swalClasses[inputType] : swalClasses.input;\n  return dom.getChildByClass(dom.getContent(), inputClass);\n};\n\nconst renderInputType = {};\n\nrenderInputType.text = renderInputType.email = renderInputType.password = renderInputType.number = renderInputType.tel = renderInputType.url = (input, params) => {\n  if (typeof params.inputValue === 'string' || typeof params.inputValue === 'number') {\n    input.value = params.inputValue;\n  } else if (!isPromise(params.inputValue)) {\n    warn(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof params.inputValue}\"`);\n  }\n\n  setInputPlaceholder(input, params);\n  input.type = params.input;\n  return input;\n};\n\nrenderInputType.file = (input, params) => {\n  setInputPlaceholder(input, params);\n  return input;\n};\n\nrenderInputType.range = (range, params) => {\n  const rangeInput = range.querySelector('input');\n  const rangeOutput = range.querySelector('output');\n  rangeInput.value = params.inputValue;\n  rangeInput.type = params.input;\n  rangeOutput.value = params.inputValue;\n  return range;\n};\n\nrenderInputType.select = (select, params) => {\n  select.innerHTML = '';\n\n  if (params.inputPlaceholder) {\n    const placeholder = document.createElement('option');\n    placeholder.innerHTML = params.inputPlaceholder;\n    placeholder.value = '';\n    placeholder.disabled = true;\n    placeholder.selected = true;\n    select.appendChild(placeholder);\n  }\n\n  return select;\n};\n\nrenderInputType.radio = radio => {\n  radio.innerHTML = '';\n  return radio;\n};\n\nrenderInputType.checkbox = (checkboxContainer, params) => {\n  const checkbox = dom.getInput(dom.getContent(), 'checkbox');\n  checkbox.value = 1;\n  checkbox.id = swalClasses.checkbox;\n  checkbox.checked = Boolean(params.inputValue);\n  const label = checkboxContainer.querySelector('span');\n  label.innerHTML = params.inputPlaceholder;\n  return checkboxContainer;\n};\n\nrenderInputType.textarea = (textarea, params) => {\n  textarea.value = params.inputValue;\n  setInputPlaceholder(textarea, params);\n\n  if ('MutationObserver' in window) {\n    // #1699\n    const initialPopupWidth = parseInt(window.getComputedStyle(dom.getPopup()).width);\n    const popupPadding = parseInt(window.getComputedStyle(dom.getPopup()).paddingLeft) + parseInt(window.getComputedStyle(dom.getPopup()).paddingRight);\n\n    const outputsize = () => {\n      const contentWidth = textarea.offsetWidth + popupPadding;\n\n      if (contentWidth > initialPopupWidth) {\n        dom.getPopup().style.width = `${contentWidth}px`;\n      } else {\n        dom.getPopup().style.width = null;\n      }\n    };\n\n    new MutationObserver(outputsize).observe(textarea, {\n      attributes: true,\n      attributeFilter: ['style']\n    });\n  }\n\n  return textarea;\n};","map":{"version":3,"sources":["/home/bmenezes/my-app/node_modules/sweetalert2/src/utils/dom/renderers/renderInput.js"],"names":["swalClasses","warn","error","isPromise","dom","privateProps","inputTypes","renderInput","instance","params","content","getContent","innerParams","get","rerender","input","forEach","inputType","inputClass","inputContainer","getChildByClass","setAttributes","inputAttributes","className","hide","showInput","setCustomClass","renderInputType","getInputContainer","show","setTimeout","focusInput","removeAttributes","i","attributes","length","attrName","name","includes","removeAttribute","getInput","attr","setAttribute","customClass","addClass","setInputPlaceholder","placeholder","inputPlaceholder","text","email","password","number","tel","url","inputValue","value","type","file","range","rangeInput","querySelector","rangeOutput","select","innerHTML","document","createElement","disabled","selected","appendChild","radio","checkbox","checkboxContainer","id","checked","Boolean","label","textarea","window","initialPopupWidth","parseInt","getComputedStyle","getPopup","width","popupPadding","paddingLeft","paddingRight","outputsize","contentWidth","offsetWidth","style","MutationObserver","observe","attributeFilter"],"mappings":"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","sourcesContent":["import { swalClasses } from '../../classes.js'\nimport { warn, error, isPromise } from '../../utils.js'\nimport * as dom from '../../dom/index.js'\nimport privateProps from '../../../privateProps.js'\n\nconst inputTypes = ['input', 'file', 'range', 'select', 'radio', 'checkbox', 'textarea']\n\nexport const renderInput = (instance, params) => {\n  const content = dom.getContent()\n  const innerParams = privateProps.innerParams.get(instance)\n  const rerender = !innerParams || params.input !== innerParams.input\n\n  inputTypes.forEach((inputType) => {\n    const inputClass = swalClasses[inputType]\n    const inputContainer = dom.getChildByClass(content, inputClass)\n\n    // set attributes\n    setAttributes(inputType, params.inputAttributes)\n\n    // set class\n    inputContainer.className = inputClass\n\n    if (rerender) {\n      dom.hide(inputContainer)\n    }\n  })\n\n  if (params.input) {\n    if (rerender) {\n      showInput(params)\n    }\n    // set custom class\n    setCustomClass(params)\n  }\n}\n\nconst showInput = (params) => {\n  if (!renderInputType[params.input]) {\n    return error(`Unexpected type of input! Expected \"text\", \"email\", \"password\", \"number\", \"tel\", \"select\", \"radio\", \"checkbox\", \"textarea\", \"file\" or \"url\", got \"${params.input}\"`)\n  }\n\n  const inputContainer = getInputContainer(params.input)\n  const input = renderInputType[params.input](inputContainer, params)\n  dom.show(input)\n\n  // input autofocus\n  setTimeout(() => {\n    dom.focusInput(input)\n  })\n}\n\nconst removeAttributes = (input) => {\n  for (let i = 0; i < input.attributes.length; i++) {\n    const attrName = input.attributes[i].name\n    if (!['type', 'value', 'style'].includes(attrName)) {\n      input.removeAttribute(attrName)\n    }\n  }\n}\n\nconst setAttributes = (inputType, inputAttributes) => {\n  const input = dom.getInput(dom.getContent(), inputType)\n  if (!input) {\n    return\n  }\n\n  removeAttributes(input)\n\n  for (const attr in inputAttributes) {\n    // Do not set a placeholder for <input type=\"range\">\n    // it'll crash Edge, #1298\n    if (inputType === 'range' && attr === 'placeholder') {\n      continue\n    }\n\n    input.setAttribute(attr, inputAttributes[attr])\n  }\n}\n\nconst setCustomClass = (params) => {\n  const inputContainer = getInputContainer(params.input)\n  if (params.customClass) {\n    dom.addClass(inputContainer, params.customClass.input)\n  }\n}\n\nconst setInputPlaceholder = (input, params) => {\n  if (!input.placeholder || params.inputPlaceholder) {\n    input.placeholder = params.inputPlaceholder\n  }\n}\n\nconst getInputContainer = (inputType) => {\n  const inputClass = swalClasses[inputType] ? swalClasses[inputType] : swalClasses.input\n  return dom.getChildByClass(dom.getContent(), inputClass)\n}\n\nconst renderInputType = {}\n\nrenderInputType.text =\nrenderInputType.email =\nrenderInputType.password =\nrenderInputType.number =\nrenderInputType.tel =\nrenderInputType.url = (input, params) => {\n  if (typeof params.inputValue === 'string' || typeof params.inputValue === 'number') {\n    input.value = params.inputValue\n  } else if (!isPromise(params.inputValue)) {\n    warn(`Unexpected type of inputValue! Expected \"string\", \"number\" or \"Promise\", got \"${typeof params.inputValue}\"`)\n  }\n  setInputPlaceholder(input, params)\n  input.type = params.input\n  return input\n}\n\nrenderInputType.file = (input, params) => {\n  setInputPlaceholder(input, params)\n  return input\n}\n\nrenderInputType.range = (range, params) => {\n  const rangeInput = range.querySelector('input')\n  const rangeOutput = range.querySelector('output')\n  rangeInput.value = params.inputValue\n  rangeInput.type = params.input\n  rangeOutput.value = params.inputValue\n  return range\n}\n\nrenderInputType.select = (select, params) => {\n  select.innerHTML = ''\n  if (params.inputPlaceholder) {\n    const placeholder = document.createElement('option')\n    placeholder.innerHTML = params.inputPlaceholder\n    placeholder.value = ''\n    placeholder.disabled = true\n    placeholder.selected = true\n    select.appendChild(placeholder)\n  }\n  return select\n}\n\nrenderInputType.radio = (radio) => {\n  radio.innerHTML = ''\n  return radio\n}\n\nrenderInputType.checkbox = (checkboxContainer, params) => {\n  const checkbox = dom.getInput(dom.getContent(), 'checkbox')\n  checkbox.value = 1\n  checkbox.id = swalClasses.checkbox\n  checkbox.checked = Boolean(params.inputValue)\n  const label = checkboxContainer.querySelector('span')\n  label.innerHTML = params.inputPlaceholder\n  return checkboxContainer\n}\n\nrenderInputType.textarea = (textarea, params) => {\n  textarea.value = params.inputValue\n  setInputPlaceholder(textarea, params)\n\n  if ('MutationObserver' in window) { // #1699\n    const initialPopupWidth = parseInt(window.getComputedStyle(dom.getPopup()).width)\n    const popupPadding = parseInt(window.getComputedStyle(dom.getPopup()).paddingLeft) + parseInt(window.getComputedStyle(dom.getPopup()).paddingRight)\n    const outputsize = () => {\n      const contentWidth = textarea.offsetWidth + popupPadding\n      if (contentWidth > initialPopupWidth) {\n        dom.getPopup().style.width = `${contentWidth}px`\n      } else {\n        dom.getPopup().style.width = null\n      }\n    }\n    new MutationObserver(outputsize).observe(textarea, {\n      attributes: true, attributeFilter: ['style']\n    })\n  }\n\n  return textarea\n}\n"]},"metadata":{},"sourceType":"module"}