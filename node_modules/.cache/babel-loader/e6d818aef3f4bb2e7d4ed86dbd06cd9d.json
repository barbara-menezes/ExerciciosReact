{"ast":null,"code":"import { getContainer } from './dom/getters.js';\nimport { contains } from './dom/domUtils.js';\nimport { toArray } from './utils.js'; // From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n// Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n// elements not within the active modal dialog will not be surfaced if a user opens a screen\n// reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\nexport const setAriaHidden = () => {\n  const bodyChildren = toArray(document.body.children);\n  bodyChildren.forEach(el => {\n    if (el === getContainer() || contains(el, getContainer())) {\n      return;\n    }\n\n    if (el.hasAttribute('aria-hidden')) {\n      el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'));\n    }\n\n    el.setAttribute('aria-hidden', 'true');\n  });\n};\nexport const unsetAriaHidden = () => {\n  const bodyChildren = toArray(document.body.children);\n  bodyChildren.forEach(el => {\n    if (el.hasAttribute('data-previous-aria-hidden')) {\n      el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'));\n      el.removeAttribute('data-previous-aria-hidden');\n    } else {\n      el.removeAttribute('aria-hidden');\n    }\n  });\n};","map":{"version":3,"sources":["/home/bmenezes/my-app/node_modules/sweetalert2/src/utils/aria.js"],"names":["getContainer","contains","toArray","setAriaHidden","bodyChildren","document","body","children","forEach","el","hasAttribute","setAttribute","getAttribute","unsetAriaHidden","removeAttribute"],"mappings":"AAAA,SAASA,YAAT,QAA6B,kBAA7B;AACA,SAASC,QAAT,QAAyB,mBAAzB;AACA,SAASC,OAAT,QAAwB,YAAxB,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,QAAMC,YAAY,GAAGF,OAAO,CAACG,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAA5B;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,EAAE,IAAI;AACzB,QAAIA,EAAE,KAAKT,YAAY,EAAnB,IAAyBC,QAAQ,CAACQ,EAAD,EAAKT,YAAY,EAAjB,CAArC,EAA2D;AACzD;AACD;;AAED,QAAIS,EAAE,CAACC,YAAH,CAAgB,aAAhB,CAAJ,EAAoC;AAClCD,MAAAA,EAAE,CAACE,YAAH,CAAgB,2BAAhB,EAA6CF,EAAE,CAACG,YAAH,CAAgB,aAAhB,CAA7C;AACD;;AACDH,IAAAA,EAAE,CAACE,YAAH,CAAgB,aAAhB,EAA+B,MAA/B;AACD,GATD;AAUD,CAZM;AAcP,OAAO,MAAME,eAAe,GAAG,MAAM;AACnC,QAAMT,YAAY,GAAGF,OAAO,CAACG,QAAQ,CAACC,IAAT,CAAcC,QAAf,CAA5B;AACAH,EAAAA,YAAY,CAACI,OAAb,CAAqBC,EAAE,IAAI;AACzB,QAAIA,EAAE,CAACC,YAAH,CAAgB,2BAAhB,CAAJ,EAAkD;AAChDD,MAAAA,EAAE,CAACE,YAAH,CAAgB,aAAhB,EAA+BF,EAAE,CAACG,YAAH,CAAgB,2BAAhB,CAA/B;AACAH,MAAAA,EAAE,CAACK,eAAH,CAAmB,2BAAnB;AACD,KAHD,MAGO;AACLL,MAAAA,EAAE,CAACK,eAAH,CAAmB,aAAnB;AACD;AACF,GAPD;AAQD,CAVM","sourcesContent":["import { getContainer } from './dom/getters.js'\nimport { contains } from './dom/domUtils.js'\nimport { toArray } from './utils.js'\n\n// From https://developer.paciellogroup.com/blog/2018/06/the-current-state-of-modal-dialog-accessibility/\n// Adding aria-hidden=\"true\" to elements outside of the active modal dialog ensures that\n// elements not within the active modal dialog will not be surfaced if a user opens a screen\n// reader’s list of elements (headings, form controls, landmarks, etc.) in the document.\n\nexport const setAriaHidden = () => {\n  const bodyChildren = toArray(document.body.children)\n  bodyChildren.forEach(el => {\n    if (el === getContainer() || contains(el, getContainer())) {\n      return\n    }\n\n    if (el.hasAttribute('aria-hidden')) {\n      el.setAttribute('data-previous-aria-hidden', el.getAttribute('aria-hidden'))\n    }\n    el.setAttribute('aria-hidden', 'true')\n  })\n}\n\nexport const unsetAriaHidden = () => {\n  const bodyChildren = toArray(document.body.children)\n  bodyChildren.forEach(el => {\n    if (el.hasAttribute('data-previous-aria-hidden')) {\n      el.setAttribute('aria-hidden', el.getAttribute('data-previous-aria-hidden'))\n      el.removeAttribute('data-previous-aria-hidden')\n    } else {\n      el.removeAttribute('aria-hidden')\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}