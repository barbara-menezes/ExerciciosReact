{"ast":null,"code":"import { callIfFunction } from '../utils/utils.js';\nimport { DismissReason } from '../utils/DismissReason.js';\nimport privateProps from '../privateProps.js';\nexport const handlePopupClick = (instance, domCache, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance);\n\n  if (innerParams.toast) {\n    handleToastClick(instance, domCache, dismissWith);\n  } else {\n    // Ignore click events that had mousedown on the popup but mouseup on the container\n    // This can happen when the user drags a slider\n    handleModalMousedown(domCache); // Ignore click events that had mousedown on the container but mouseup on the popup\n\n    handleContainerMousedown(domCache);\n    handleModalClick(instance, domCache, dismissWith);\n  }\n};\n\nconst handleToastClick = (instance, domCache, dismissWith) => {\n  // Closing toast by internal click\n  domCache.popup.onclick = () => {\n    const innerParams = privateProps.innerParams.get(instance);\n\n    if (innerParams.showConfirmButton || innerParams.showCancelButton || innerParams.showCloseButton || innerParams.input) {\n      return;\n    }\n\n    dismissWith(DismissReason.close);\n  };\n};\n\nlet ignoreOutsideClick = false;\n\nconst handleModalMousedown = domCache => {\n  domCache.popup.onmousedown = () => {\n    domCache.container.onmouseup = function (e) {\n      domCache.container.onmouseup = undefined; // We only check if the mouseup target is the container because usually it doesn't\n      // have any other direct children aside of the popup\n\n      if (e.target === domCache.container) {\n        ignoreOutsideClick = true;\n      }\n    };\n  };\n};\n\nconst handleContainerMousedown = domCache => {\n  domCache.container.onmousedown = () => {\n    domCache.popup.onmouseup = function (e) {\n      domCache.popup.onmouseup = undefined; // We also need to check if the mouseup target is a child of the popup\n\n      if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n        ignoreOutsideClick = true;\n      }\n    };\n  };\n};\n\nconst handleModalClick = (instance, domCache, dismissWith) => {\n  domCache.container.onclick = e => {\n    const innerParams = privateProps.innerParams.get(instance);\n\n    if (ignoreOutsideClick) {\n      ignoreOutsideClick = false;\n      return;\n    }\n\n    if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n      dismissWith(DismissReason.backdrop);\n    }\n  };\n};","map":{"version":3,"sources":["/home/bmenezes/my-app/node_modules/sweetalert2/src/instanceMethods/popup-click-handler.js"],"names":["callIfFunction","DismissReason","privateProps","handlePopupClick","instance","domCache","dismissWith","innerParams","get","toast","handleToastClick","handleModalMousedown","handleContainerMousedown","handleModalClick","popup","onclick","showConfirmButton","showCancelButton","showCloseButton","input","close","ignoreOutsideClick","onmousedown","container","onmouseup","e","undefined","target","contains","allowOutsideClick","backdrop"],"mappings":"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","sourcesContent":["import { callIfFunction } from '../utils/utils.js'\nimport { DismissReason } from '../utils/DismissReason.js'\nimport privateProps from '../privateProps.js'\n\nexport const handlePopupClick = (instance, domCache, dismissWith) => {\n  const innerParams = privateProps.innerParams.get(instance)\n  if (innerParams.toast) {\n    handleToastClick(instance, domCache, dismissWith)\n  } else {\n    // Ignore click events that had mousedown on the popup but mouseup on the container\n    // This can happen when the user drags a slider\n    handleModalMousedown(domCache)\n\n    // Ignore click events that had mousedown on the container but mouseup on the popup\n    handleContainerMousedown(domCache)\n\n    handleModalClick(instance, domCache, dismissWith)\n  }\n}\n\nconst handleToastClick = (instance, domCache, dismissWith) => {\n  // Closing toast by internal click\n  domCache.popup.onclick = () => {\n    const innerParams = privateProps.innerParams.get(instance)\n    if (\n      innerParams.showConfirmButton ||\n      innerParams.showCancelButton ||\n      innerParams.showCloseButton ||\n      innerParams.input\n    ) {\n      return\n    }\n    dismissWith(DismissReason.close)\n  }\n}\n\nlet ignoreOutsideClick = false\n\nconst handleModalMousedown = (domCache) => {\n  domCache.popup.onmousedown = () => {\n    domCache.container.onmouseup = function (e) {\n      domCache.container.onmouseup = undefined\n      // We only check if the mouseup target is the container because usually it doesn't\n      // have any other direct children aside of the popup\n      if (e.target === domCache.container) {\n        ignoreOutsideClick = true\n      }\n    }\n  }\n}\n\nconst handleContainerMousedown = (domCache) => {\n  domCache.container.onmousedown = () => {\n    domCache.popup.onmouseup = function (e) {\n      domCache.popup.onmouseup = undefined\n      // We also need to check if the mouseup target is a child of the popup\n      if (e.target === domCache.popup || domCache.popup.contains(e.target)) {\n        ignoreOutsideClick = true\n      }\n    }\n  }\n}\n\nconst handleModalClick = (instance, domCache, dismissWith) => {\n  domCache.container.onclick = (e) => {\n    const innerParams = privateProps.innerParams.get(instance)\n    if (ignoreOutsideClick) {\n      ignoreOutsideClick = false\n      return\n    }\n    if (e.target === domCache.container && callIfFunction(innerParams.allowOutsideClick)) {\n      dismissWith(DismissReason.backdrop)\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}