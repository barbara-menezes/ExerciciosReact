{"ast":null,"code":"import { swalClasses } from '../classes.js';\nimport { uniqueArray, toArray } from '../utils.js';\nimport { isVisible } from './domUtils.js';\nexport const getContainer = () => document.body.querySelector(`.${swalClasses.container}`);\nexport const elementBySelector = selectorString => {\n  const container = getContainer();\n  return container ? container.querySelector(selectorString) : null;\n};\n\nconst elementByClass = className => {\n  return elementBySelector(`.${className}`);\n};\n\nexport const getPopup = () => elementByClass(swalClasses.popup);\nexport const getIcons = () => {\n  const popup = getPopup();\n  return toArray(popup.querySelectorAll(`.${swalClasses.icon}`));\n};\nexport const getIcon = () => {\n  const visibleIcon = getIcons().filter(icon => isVisible(icon));\n  return visibleIcon.length ? visibleIcon[0] : null;\n};\nexport const getTitle = () => elementByClass(swalClasses.title);\nexport const getContent = () => elementByClass(swalClasses.content);\nexport const getHtmlContainer = () => elementByClass(swalClasses['html-container']);\nexport const getImage = () => elementByClass(swalClasses.image);\nexport const getProgressSteps = () => elementByClass(swalClasses['progress-steps']);\nexport const getValidationMessage = () => elementByClass(swalClasses['validation-message']);\nexport const getConfirmButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`);\nexport const getCancelButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`);\nexport const getActions = () => elementByClass(swalClasses.actions);\nexport const getHeader = () => elementByClass(swalClasses.header);\nexport const getFooter = () => elementByClass(swalClasses.footer);\nexport const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar']);\nexport const getCloseButton = () => elementByClass(swalClasses.close); // https://github.com/jkup/focusable/blob/master/index.js\n\nconst focusable = `\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n`;\nexport const getFocusableElements = () => {\n  const focusableElementsWithTabindex = toArray(getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])')) // sort according to tabindex\n  .sort((a, b) => {\n    a = parseInt(a.getAttribute('tabindex'));\n    b = parseInt(b.getAttribute('tabindex'));\n\n    if (a > b) {\n      return 1;\n    } else if (a < b) {\n      return -1;\n    }\n\n    return 0;\n  });\n  const otherFocusableElements = toArray(getPopup().querySelectorAll(focusable)).filter(el => el.getAttribute('tabindex') !== '-1');\n  return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(el => isVisible(el));\n};\nexport const isModal = () => {\n  return !isToast() && !document.body.classList.contains(swalClasses['no-backdrop']);\n};\nexport const isToast = () => {\n  return document.body.classList.contains(swalClasses['toast-shown']);\n};\nexport const isLoading = () => {\n  return getPopup().hasAttribute('data-loading');\n};","map":{"version":3,"sources":["/home/bmenezes/my-app/node_modules/sweetalert2/src/utils/dom/getters.js"],"names":["swalClasses","uniqueArray","toArray","isVisible","getContainer","document","body","querySelector","container","elementBySelector","selectorString","elementByClass","className","getPopup","popup","getIcons","querySelectorAll","icon","getIcon","visibleIcon","filter","length","getTitle","title","getContent","content","getHtmlContainer","getImage","image","getProgressSteps","getValidationMessage","getConfirmButton","actions","confirm","getCancelButton","cancel","getActions","getHeader","header","getFooter","footer","getTimerProgressBar","getCloseButton","close","focusable","getFocusableElements","focusableElementsWithTabindex","sort","a","b","parseInt","getAttribute","otherFocusableElements","el","concat","isModal","isToast","classList","contains","isLoading","hasAttribute"],"mappings":"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","sourcesContent":["import { swalClasses } from '../classes.js'\nimport { uniqueArray, toArray } from '../utils.js'\nimport { isVisible } from './domUtils.js'\n\nexport const getContainer = () => document.body.querySelector(`.${swalClasses.container}`)\n\nexport const elementBySelector = (selectorString) => {\n  const container = getContainer()\n  return container ? container.querySelector(selectorString) : null\n}\n\nconst elementByClass = (className) => {\n  return elementBySelector(`.${className}`)\n}\n\nexport const getPopup = () => elementByClass(swalClasses.popup)\n\nexport const getIcons = () => {\n  const popup = getPopup()\n  return toArray(popup.querySelectorAll(`.${swalClasses.icon}`))\n}\n\nexport const getIcon = () => {\n  const visibleIcon = getIcons().filter(icon => isVisible(icon))\n  return visibleIcon.length ? visibleIcon[0] : null\n}\n\nexport const getTitle = () => elementByClass(swalClasses.title)\n\nexport const getContent = () => elementByClass(swalClasses.content)\n\nexport const getHtmlContainer = () => elementByClass(swalClasses['html-container'])\n\nexport const getImage = () => elementByClass(swalClasses.image)\n\nexport const getProgressSteps = () => elementByClass(swalClasses['progress-steps'])\n\nexport const getValidationMessage = () => elementByClass(swalClasses['validation-message'])\n\nexport const getConfirmButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.confirm}`)\n\nexport const getCancelButton = () => elementBySelector(`.${swalClasses.actions} .${swalClasses.cancel}`)\n\nexport const getActions = () => elementByClass(swalClasses.actions)\n\nexport const getHeader = () => elementByClass(swalClasses.header)\n\nexport const getFooter = () => elementByClass(swalClasses.footer)\n\nexport const getTimerProgressBar = () => elementByClass(swalClasses['timer-progress-bar'])\n\nexport const getCloseButton = () => elementByClass(swalClasses.close)\n\n// https://github.com/jkup/focusable/blob/master/index.js\nconst focusable = `\n  a[href],\n  area[href],\n  input:not([disabled]),\n  select:not([disabled]),\n  textarea:not([disabled]),\n  button:not([disabled]),\n  iframe,\n  object,\n  embed,\n  [tabindex=\"0\"],\n  [contenteditable],\n  audio[controls],\n  video[controls],\n  summary\n`\n\nexport const getFocusableElements = () => {\n  const focusableElementsWithTabindex = toArray(\n    getPopup().querySelectorAll('[tabindex]:not([tabindex=\"-1\"]):not([tabindex=\"0\"])')\n  )\n  // sort according to tabindex\n    .sort((a, b) => {\n      a = parseInt(a.getAttribute('tabindex'))\n      b = parseInt(b.getAttribute('tabindex'))\n      if (a > b) {\n        return 1\n      } else if (a < b) {\n        return -1\n      }\n      return 0\n    })\n\n  const otherFocusableElements = toArray(\n    getPopup().querySelectorAll(focusable)\n  ).filter(el => el.getAttribute('tabindex') !== '-1')\n\n  return uniqueArray(focusableElementsWithTabindex.concat(otherFocusableElements)).filter(el => isVisible(el))\n}\n\nexport const isModal = () => {\n  return !isToast() && !document.body.classList.contains(swalClasses['no-backdrop'])\n}\n\nexport const isToast = () => {\n  return document.body.classList.contains(swalClasses['toast-shown'])\n}\n\nexport const isLoading = () => {\n  return getPopup().hasAttribute('data-loading')\n}\n"]},"metadata":{},"sourceType":"module"}