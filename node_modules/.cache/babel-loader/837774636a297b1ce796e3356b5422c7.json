{"ast":null,"code":"import { error } from './utils/utils.js';\nimport { DismissReason } from './utils/DismissReason.js';\nimport * as staticMethods from './staticMethods.js';\nimport * as instanceMethods from './instanceMethods.js';\nimport privateProps from './privateProps.js';\nlet currentInstance; // SweetAlert constructor\n\nfunction SweetAlert(...args) {\n  // Prevent run in Node env\n\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    return;\n  } // Check for the existence of Promise\n\n  /* istanbul ignore if */\n\n\n  if (typeof Promise === 'undefined') {\n    error('This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)');\n  }\n\n  currentInstance = this;\n  const outerParams = Object.freeze(this.constructor.argsToParams(args));\n  Object.defineProperties(this, {\n    params: {\n      value: outerParams,\n      writable: false,\n      enumerable: true,\n      configurable: true\n    }\n  });\n\n  const promise = this._main(this.params);\n\n  privateProps.promise.set(this, promise);\n} // `catch` cannot be the name of a module export, so we define our thenable methods here instead\n\n\nSweetAlert.prototype.then = function (onFulfilled) {\n  const promise = privateProps.promise.get(this);\n  return promise.then(onFulfilled);\n};\n\nSweetAlert.prototype.finally = function (onFinally) {\n  const promise = privateProps.promise.get(this);\n  return promise.finally(onFinally);\n}; // Assign instance methods from src/instanceMethods/*.js to prototype\n\n\nObject.assign(SweetAlert.prototype, instanceMethods); // Assign static methods from src/staticMethods/*.js to constructor\n\nObject.assign(SweetAlert, staticMethods); // Proxy to instance methods to constructor, for now, for backwards compatibility\n\nObject.keys(instanceMethods).forEach(key => {\n  SweetAlert[key] = function (...args) {\n    if (currentInstance) {\n      return currentInstance[key](...args);\n    }\n  };\n});\nSweetAlert.DismissReason = DismissReason;\nSweetAlert.version = '9.8.2';\nexport default SweetAlert;","map":{"version":3,"sources":["/home/bmenezes/my-app/node_modules/sweetalert2/src/SweetAlert.js"],"names":["error","DismissReason","staticMethods","instanceMethods","privateProps","currentInstance","SweetAlert","args","window","Promise","outerParams","Object","freeze","constructor","argsToParams","defineProperties","params","value","writable","enumerable","configurable","promise","_main","set","prototype","then","onFulfilled","get","finally","onFinally","assign","keys","forEach","key","version"],"mappings":"AAAA,SAASA,KAAT,QAAsB,kBAAtB;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,OAAO,KAAKC,aAAZ,MAA+B,oBAA/B;AACA,OAAO,KAAKC,eAAZ,MAAiC,sBAAjC;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAEA,IAAIC,eAAJ,C,CAEA;;AACA,SAASC,UAAT,CAAqB,GAAGC,IAAxB,EAA8B;AAC5B;;AACA;AACA,MAAI,OAAOC,MAAP,KAAkB,WAAtB,EAAmC;AACjC;AACD,GAL2B,CAO5B;;AACA;;;AACA,MAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;AAClCT,IAAAA,KAAK,CAAC,0MAAD,CAAL;AACD;;AAEDK,EAAAA,eAAe,GAAG,IAAlB;AAEA,QAAMK,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAc,KAAKC,WAAL,CAAiBC,YAAjB,CAA8BP,IAA9B,CAAd,CAApB;AAEAI,EAAAA,MAAM,CAACI,gBAAP,CAAwB,IAAxB,EAA8B;AAC5BC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAEP,WADD;AAENQ,MAAAA,QAAQ,EAAE,KAFJ;AAGNC,MAAAA,UAAU,EAAE,IAHN;AAINC,MAAAA,YAAY,EAAE;AAJR;AADoB,GAA9B;;AASA,QAAMC,OAAO,GAAG,KAAKC,KAAL,CAAW,KAAKN,MAAhB,CAAhB;;AACAZ,EAAAA,YAAY,CAACiB,OAAb,CAAqBE,GAArB,CAAyB,IAAzB,EAA+BF,OAA/B;AACD,C,CAED;;;AACAf,UAAU,CAACkB,SAAX,CAAqBC,IAArB,GAA4B,UAAUC,WAAV,EAAuB;AACjD,QAAML,OAAO,GAAGjB,YAAY,CAACiB,OAAb,CAAqBM,GAArB,CAAyB,IAAzB,CAAhB;AACA,SAAON,OAAO,CAACI,IAAR,CAAaC,WAAb,CAAP;AACD,CAHD;;AAIApB,UAAU,CAACkB,SAAX,CAAqBI,OAArB,GAA+B,UAAUC,SAAV,EAAqB;AAClD,QAAMR,OAAO,GAAGjB,YAAY,CAACiB,OAAb,CAAqBM,GAArB,CAAyB,IAAzB,CAAhB;AACA,SAAON,OAAO,CAACO,OAAR,CAAgBC,SAAhB,CAAP;AACD,CAHD,C,CAKA;;;AACAlB,MAAM,CAACmB,MAAP,CAAcxB,UAAU,CAACkB,SAAzB,EAAoCrB,eAApC,E,CAEA;;AACAQ,MAAM,CAACmB,MAAP,CAAcxB,UAAd,EAA0BJ,aAA1B,E,CAEA;;AACAS,MAAM,CAACoB,IAAP,CAAY5B,eAAZ,EAA6B6B,OAA7B,CAAqCC,GAAG,IAAI;AAC1C3B,EAAAA,UAAU,CAAC2B,GAAD,CAAV,GAAkB,UAAU,GAAG1B,IAAb,EAAmB;AACnC,QAAIF,eAAJ,EAAqB;AACnB,aAAOA,eAAe,CAAC4B,GAAD,CAAf,CAAqB,GAAG1B,IAAxB,CAAP;AACD;AACF,GAJD;AAKD,CAND;AAQAD,UAAU,CAACL,aAAX,GAA2BA,aAA3B;AAEAK,UAAU,CAAC4B,OAAX,GAAqB,OAArB;AAEA,eAAe5B,UAAf","sourcesContent":["import { error } from './utils/utils.js'\nimport { DismissReason } from './utils/DismissReason.js'\nimport * as staticMethods from './staticMethods.js'\nimport * as instanceMethods from './instanceMethods.js'\nimport privateProps from './privateProps.js'\n\nlet currentInstance\n\n// SweetAlert constructor\nfunction SweetAlert (...args) {\n  // Prevent run in Node env\n  /* istanbul ignore if */\n  if (typeof window === 'undefined') {\n    return\n  }\n\n  // Check for the existence of Promise\n  /* istanbul ignore if */\n  if (typeof Promise === 'undefined') {\n    error('This package requires a Promise library, please include a shim to enable it in this browser (See: https://github.com/sweetalert2/sweetalert2/wiki/Migration-from-SweetAlert-to-SweetAlert2#1-ie-support)')\n  }\n\n  currentInstance = this\n\n  const outerParams = Object.freeze(this.constructor.argsToParams(args))\n\n  Object.defineProperties(this, {\n    params: {\n      value: outerParams,\n      writable: false,\n      enumerable: true,\n      configurable: true\n    }\n  })\n\n  const promise = this._main(this.params)\n  privateProps.promise.set(this, promise)\n}\n\n// `catch` cannot be the name of a module export, so we define our thenable methods here instead\nSweetAlert.prototype.then = function (onFulfilled) {\n  const promise = privateProps.promise.get(this)\n  return promise.then(onFulfilled)\n}\nSweetAlert.prototype.finally = function (onFinally) {\n  const promise = privateProps.promise.get(this)\n  return promise.finally(onFinally)\n}\n\n// Assign instance methods from src/instanceMethods/*.js to prototype\nObject.assign(SweetAlert.prototype, instanceMethods)\n\n// Assign static methods from src/staticMethods/*.js to constructor\nObject.assign(SweetAlert, staticMethods)\n\n// Proxy to instance methods to constructor, for now, for backwards compatibility\nObject.keys(instanceMethods).forEach(key => {\n  SweetAlert[key] = function (...args) {\n    if (currentInstance) {\n      return currentInstance[key](...args)\n    }\n  }\n})\n\nSweetAlert.DismissReason = DismissReason\n\nSweetAlert.version = '9.8.2'\n\nexport default SweetAlert\n"]},"metadata":{},"sourceType":"module"}