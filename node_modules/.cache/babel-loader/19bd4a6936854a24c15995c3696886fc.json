{"ast":null,"code":"var _jsxFileName = \"/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\n\nfunction CreateBeerForm() {\n  const [beerName, setBeerName] = useState('');\n  const [beerNameError, setBeerNameError] = useState('');\n  const [beerType, setBeerType] = useState('');\n  const [hasCorn, setHasCorn] = useState(false);\n  const [ingredients, setIngredients] = useState(''); //const { register, handleSubmit, errors } = useForm();\n\n  const [disable, setDisabled] = useState(true);\n  const firstRender = React.useRef(true);\n  useEffect(() => {\n    // we want to skip validation on first render\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    } // here we can disable/enable the save button by wrapping the setState function\n    // in a call to the validation function which returns true/false\n\n\n    setDisabled(formValidation());\n  }, [beerName]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    console.log(\"beerName:\" + beerName, \"beerName:\" + beerType, \"beerName:\" + hasCorn, \"beerName:\" + ingredients);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(FormTextInput, {\n    value: beerName,\n    onChange: event => setBeerName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormSelect, {\n    value: beerType,\n    onChange: event => setBeerType(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(FormCheckbox, {\n    value: hasCorn,\n    onChange: event => setHasCorn(event.target.value ? event.target.checked : event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(FormTextArea, {\n    value: ingredients,\n    onChange: event => setIngredients(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    type: \"submit\",\n    \"data-test\": \"formSubmit\",\n    name: \"formSubmit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default CreateBeerForm;","map":{"version":3,"sources":["/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx"],"names":["React","useState","useEffect","FormTextInput","FormSelect","FormCheckbox","FormTextArea","CreateBeerForm","beerName","setBeerName","beerNameError","setBeerNameError","beerType","setBeerType","hasCorn","setHasCorn","ingredients","setIngredients","disable","setDisabled","firstRender","useRef","current","formValidation","onSubmit","event","preventDefault","console","log","handleSubmit","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\nimport { useForm } from \"react-hook-form\";\n\nfunction CreateBeerForm() {\n\n    const [beerName, setBeerName] = useState('');\n    const [beerNameError, setBeerNameError] = useState('');\n    const [beerType, setBeerType] = useState('');\n    const [hasCorn, setHasCorn] = useState(false);\n    const [ingredients, setIngredients] = useState('');\n    //const { register, handleSubmit, errors } = useForm();\n    const [disable, setDisabled] = useState(true);\n    const firstRender = React.useRef(true)\n\n    useEffect(() => {\n  \n        // we want to skip validation on first render\n        if (firstRender.current) {\n          firstRender.current = false\n          return\n        }\n    \n        // here we can disable/enable the save button by wrapping the setState function\n        // in a call to the validation function which returns true/false\n        setDisabled(formValidation())\n        \n      }, [beerName]) \n\n    const onSubmit = (event: any) => {\n        event.preventDefault();\n        console.log(\n            \"beerName:\" + beerName,\n            \"beerName:\" + beerType,\n            \"beerName:\" + hasCorn,\n            \"beerName:\" + ingredients\n        );\n    };\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit(onSubmit)}>\n            <div>\n                <FormTextInput value={beerName} onChange={event => setBeerName(event.target.value)} />\n            </div>\n            <div>\n                <FormSelect value={beerType} onChange={event => setBeerType(event.target.value)} />\n            </div>\n            <div>\n                <FormCheckbox value={hasCorn}\n                    onChange={event =>\n                        setHasCorn(event.target.value ? event.target.checked : event.target.value)\n                    }\n                />\n            </div>\n            <div>\n                <FormTextArea value={ingredients} onChange={event => setIngredients(event.target.value)} />\n            </div>\n            <button type=\"submit\" data-test=\"formSubmit\" name=\"formSubmit\">Submit</button>\n        </form>\n    )\n}\n\nexport default CreateBeerForm;"]},"metadata":{},"sourceType":"module"}