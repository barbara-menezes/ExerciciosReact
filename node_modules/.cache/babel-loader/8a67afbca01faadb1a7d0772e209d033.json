{"ast":null,"code":"import { getTimerProgressBar } from './getters.js';\nimport { swalClasses, iconTypes } from '../classes.js';\nimport { toArray, objectValues, warn } from '../utils.js'; // Remember state in cases where opening and handling a modal will fiddle with it.\n\nexport const states = {\n  previousBodyPadding: null\n};\nexport const hasClass = (elem, className) => {\n  if (!className) {\n    return false;\n  }\n\n  const classList = className.split(/\\s+/);\n\n  for (let i = 0; i < classList.length; i++) {\n    if (!elem.classList.contains(classList[i])) {\n      return false;\n    }\n  }\n\n  return true;\n};\n\nconst removeCustomClasses = (elem, params) => {\n  toArray(elem.classList).forEach(className => {\n    if (!objectValues(swalClasses).includes(className) && !objectValues(iconTypes).includes(className) && !objectValues(params.showClass).includes(className)) {\n      elem.classList.remove(className);\n    }\n  });\n};\n\nexport const applyCustomClass = (elem, params, className) => {\n  removeCustomClasses(elem, params);\n\n  if (params.customClass && params.customClass[className]) {\n    if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n      return warn(`Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[className]}\"`);\n    }\n\n    addClass(elem, params.customClass[className]);\n  }\n};\nexport function getInput(content, inputType) {\n  if (!inputType) {\n    return null;\n  }\n\n  switch (inputType) {\n    case 'select':\n    case 'textarea':\n    case 'file':\n      return getChildByClass(content, swalClasses[inputType]);\n\n    case 'checkbox':\n      return content.querySelector(`.${swalClasses.checkbox} input`);\n\n    case 'radio':\n      return content.querySelector(`.${swalClasses.radio} input:checked`) || content.querySelector(`.${swalClasses.radio} input:first-child`);\n\n    case 'range':\n      return content.querySelector(`.${swalClasses.range} input`);\n\n    default:\n      return getChildByClass(content, swalClasses.input);\n  }\n}\nexport const focusInput = input => {\n  input.focus(); // place cursor at end of text in text input\n\n  if (input.type !== 'file') {\n    // http://stackoverflow.com/a/2345915\n    const val = input.value;\n    input.value = '';\n    input.value = val;\n  }\n};\nexport const toggleClass = (target, classList, condition) => {\n  if (!target || !classList) {\n    return;\n  }\n\n  if (typeof classList === 'string') {\n    classList = classList.split(/\\s+/).filter(Boolean);\n  }\n\n  classList.forEach(className => {\n    if (target.forEach) {\n      target.forEach(elem => {\n        condition ? elem.classList.add(className) : elem.classList.remove(className);\n      });\n    } else {\n      condition ? target.classList.add(className) : target.classList.remove(className);\n    }\n  });\n};\nexport const addClass = (target, classList) => {\n  toggleClass(target, classList, true);\n};\nexport const removeClass = (target, classList) => {\n  toggleClass(target, classList, false);\n};\nexport const getChildByClass = (elem, className) => {\n  for (let i = 0; i < elem.childNodes.length; i++) {\n    if (hasClass(elem.childNodes[i], className)) {\n      return elem.childNodes[i];\n    }\n  }\n};\nexport const applyNumericalStyle = (elem, property, value) => {\n  if (value || parseInt(value) === 0) {\n    elem.style[property] = typeof value === 'number' ? `${value}px` : value;\n  } else {\n    elem.style.removeProperty(property);\n  }\n};\nexport const show = (elem, display = 'flex') => {\n  elem.style.opacity = '';\n  elem.style.display = display;\n};\nexport const hide = elem => {\n  elem.style.opacity = '';\n  elem.style.display = 'none';\n};\nexport const toggle = (elem, condition, display) => {\n  condition ? show(elem, display) : hide(elem);\n}; // borrowed from jquery $(elem).is(':visible') implementation\n\nexport const isVisible = elem => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length));\n/* istanbul ignore next */\n\nexport const isScrollable = elem => !!(elem.scrollHeight > elem.clientHeight); // borrowed from https://stackoverflow.com/a/46352119\n\nexport const hasCssAnimation = elem => {\n  const style = window.getComputedStyle(elem);\n  const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0');\n  const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0');\n  return animDuration > 0 || transDuration > 0;\n};\nexport const contains = (haystack, needle) => {\n  if (typeof haystack.contains === 'function') {\n    return haystack.contains(needle);\n  }\n};\nexport const animateTimerProgressBar = (timer, reset = false) => {\n  const timerProgressBar = getTimerProgressBar();\n\n  if (isVisible(timerProgressBar)) {\n    if (reset) {\n      timerProgressBar.style.transition = 'none';\n      timerProgressBar.style.width = '100%';\n    }\n\n    setTimeout(() => {\n      timerProgressBar.style.transition = `width ${timer / 1000}s linear`;\n      timerProgressBar.style.width = '0%';\n    }, 10);\n  }\n};\nexport const stopTimerProgressBar = () => {\n  const timerProgressBar = getTimerProgressBar();\n  const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n  timerProgressBar.style.removeProperty('transition');\n  timerProgressBar.style.width = '100%';\n  const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width);\n  const timerProgressBarPercent = parseInt(timerProgressBarWidth / timerProgressBarFullWidth * 100);\n  timerProgressBar.style.removeProperty('transition');\n  timerProgressBar.style.width = `${timerProgressBarPercent}%`;\n};","map":{"version":3,"sources":["/home/bmenezes/my-app/node_modules/sweetalert2/src/utils/dom/domUtils.js"],"names":["getTimerProgressBar","swalClasses","iconTypes","toArray","objectValues","warn","states","previousBodyPadding","hasClass","elem","className","classList","split","i","length","contains","removeCustomClasses","params","forEach","includes","showClass","remove","applyCustomClass","customClass","addClass","getInput","content","inputType","getChildByClass","querySelector","checkbox","radio","range","input","focusInput","focus","type","val","value","toggleClass","target","condition","filter","Boolean","add","removeClass","childNodes","applyNumericalStyle","property","parseInt","style","removeProperty","show","display","opacity","hide","toggle","isVisible","offsetWidth","offsetHeight","getClientRects","isScrollable","scrollHeight","clientHeight","hasCssAnimation","window","getComputedStyle","animDuration","parseFloat","getPropertyValue","transDuration","haystack","needle","animateTimerProgressBar","timer","reset","timerProgressBar","transition","width","setTimeout","stopTimerProgressBar","timerProgressBarWidth","timerProgressBarFullWidth","timerProgressBarPercent"],"mappings":"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","sourcesContent":["import { getTimerProgressBar } from './getters.js'\nimport { swalClasses, iconTypes } from '../classes.js'\nimport { toArray, objectValues, warn } from '../utils.js'\n\n// Remember state in cases where opening and handling a modal will fiddle with it.\nexport const states = {\n  previousBodyPadding: null\n}\n\nexport const hasClass = (elem, className) => {\n  if (!className) {\n    return false\n  }\n  const classList = className.split(/\\s+/)\n  for (let i = 0; i < classList.length; i++) {\n    if (!elem.classList.contains(classList[i])) {\n      return false\n    }\n  }\n  return true\n}\n\nconst removeCustomClasses = (elem, params) => {\n  toArray(elem.classList).forEach(className => {\n    if (\n      !objectValues(swalClasses).includes(className) &&\n      !objectValues(iconTypes).includes(className) &&\n      !objectValues(params.showClass).includes(className)\n    ) {\n      elem.classList.remove(className)\n    }\n  })\n}\n\nexport const applyCustomClass = (elem, params, className) => {\n  removeCustomClasses(elem, params)\n\n  if (params.customClass && params.customClass[className]) {\n    if (typeof params.customClass[className] !== 'string' && !params.customClass[className].forEach) {\n      return warn(`Invalid type of customClass.${className}! Expected string or iterable object, got \"${typeof params.customClass[className]}\"`)\n    }\n\n    addClass(elem, params.customClass[className])\n  }\n}\n\nexport function getInput (content, inputType) {\n  if (!inputType) {\n    return null\n  }\n  switch (inputType) {\n    case 'select':\n    case 'textarea':\n    case 'file':\n      return getChildByClass(content, swalClasses[inputType])\n    case 'checkbox':\n      return content.querySelector(`.${swalClasses.checkbox} input`)\n    case 'radio':\n      return content.querySelector(`.${swalClasses.radio} input:checked`) ||\n        content.querySelector(`.${swalClasses.radio} input:first-child`)\n    case 'range':\n      return content.querySelector(`.${swalClasses.range} input`)\n    default:\n      return getChildByClass(content, swalClasses.input)\n  }\n}\n\nexport const focusInput = (input) => {\n  input.focus()\n\n  // place cursor at end of text in text input\n  if (input.type !== 'file') {\n    // http://stackoverflow.com/a/2345915\n    const val = input.value\n    input.value = ''\n    input.value = val\n  }\n}\n\nexport const toggleClass = (target, classList, condition) => {\n  if (!target || !classList) {\n    return\n  }\n  if (typeof classList === 'string') {\n    classList = classList.split(/\\s+/).filter(Boolean)\n  }\n  classList.forEach((className) => {\n    if (target.forEach) {\n      target.forEach((elem) => {\n        condition ? elem.classList.add(className) : elem.classList.remove(className)\n      })\n    } else {\n      condition ? target.classList.add(className) : target.classList.remove(className)\n    }\n  })\n}\n\nexport const addClass = (target, classList) => {\n  toggleClass(target, classList, true)\n}\n\nexport const removeClass = (target, classList) => {\n  toggleClass(target, classList, false)\n}\n\nexport const getChildByClass = (elem, className) => {\n  for (let i = 0; i < elem.childNodes.length; i++) {\n    if (hasClass(elem.childNodes[i], className)) {\n      return elem.childNodes[i]\n    }\n  }\n}\n\nexport const applyNumericalStyle = (elem, property, value) => {\n  if (value || parseInt(value) === 0) {\n    elem.style[property] = (typeof value === 'number') ? `${value}px` : value\n  } else {\n    elem.style.removeProperty(property)\n  }\n}\n\nexport const show = (elem, display = 'flex') => {\n  elem.style.opacity = ''\n  elem.style.display = display\n}\n\nexport const hide = (elem) => {\n  elem.style.opacity = ''\n  elem.style.display = 'none'\n}\n\nexport const toggle = (elem, condition, display) => {\n  condition ? show(elem, display) : hide(elem)\n}\n\n// borrowed from jquery $(elem).is(':visible') implementation\nexport const isVisible = (elem) => !!(elem && (elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length))\n\n/* istanbul ignore next */\nexport const isScrollable = (elem) => !!(elem.scrollHeight > elem.clientHeight)\n\n// borrowed from https://stackoverflow.com/a/46352119\nexport const hasCssAnimation = (elem) => {\n  const style = window.getComputedStyle(elem)\n\n  const animDuration = parseFloat(style.getPropertyValue('animation-duration') || '0')\n  const transDuration = parseFloat(style.getPropertyValue('transition-duration') || '0')\n\n  return animDuration > 0 || transDuration > 0\n}\n\nexport const contains = (haystack, needle) => {\n  if (typeof haystack.contains === 'function') {\n    return haystack.contains(needle)\n  }\n}\n\nexport const animateTimerProgressBar = (timer, reset = false) => {\n  const timerProgressBar = getTimerProgressBar()\n  if (isVisible(timerProgressBar)) {\n    if (reset) {\n      timerProgressBar.style.transition = 'none'\n      timerProgressBar.style.width = '100%'\n    }\n    setTimeout(() => {\n      timerProgressBar.style.transition = `width ${timer / 1000}s linear`\n      timerProgressBar.style.width = '0%'\n    }, 10)\n  }\n}\n\nexport const stopTimerProgressBar = () => {\n  const timerProgressBar = getTimerProgressBar()\n  const timerProgressBarWidth = parseInt(window.getComputedStyle(timerProgressBar).width)\n  timerProgressBar.style.removeProperty('transition')\n  timerProgressBar.style.width = '100%'\n  const timerProgressBarFullWidth = parseInt(window.getComputedStyle(timerProgressBar).width)\n  const timerProgressBarPercent = parseInt(timerProgressBarWidth / timerProgressBarFullWidth * 100)\n  timerProgressBar.style.removeProperty('transition')\n  timerProgressBar.style.width = `${timerProgressBarPercent}%`\n}\n"]},"metadata":{},"sourceType":"module"}