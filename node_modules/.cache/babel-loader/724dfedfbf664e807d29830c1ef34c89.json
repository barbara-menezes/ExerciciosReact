{"ast":null,"code":"export const parseHtmlToContainer = (param, target) => {\n  // DOM element\n  if (param instanceof HTMLElement) {\n    target.appendChild(param); // Object\n  } else if (typeof param === 'object') {\n    handleObject(param, target); // Plain string\n  } else if (param) {\n    target.innerHTML = param;\n  }\n};\n\nconst handleObject = (param, target) => {\n  // JQuery element(s)\n  if (param.jquery) {\n    handleJqueryElem(target, param); // For other objects use their string representation\n  } else {\n    target.innerHTML = param.toString();\n  }\n};\n\nconst handleJqueryElem = (target, elem) => {\n  target.innerHTML = '';\n\n  if (0 in elem) {\n    for (let i = 0; i in elem; i++) {\n      target.appendChild(elem[i].cloneNode(true));\n    }\n  } else {\n    target.appendChild(elem.cloneNode(true));\n  }\n};","map":{"version":3,"sources":["/home/bmenezes/my-app/node_modules/sweetalert2/src/utils/dom/parseHtmlToContainer.js"],"names":["parseHtmlToContainer","param","target","HTMLElement","appendChild","handleObject","innerHTML","jquery","handleJqueryElem","toString","elem","i","cloneNode"],"mappings":"AAAA,OAAO,MAAMA,oBAAoB,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrD;AACA,MAAID,KAAK,YAAYE,WAArB,EAAkC;AAChCD,IAAAA,MAAM,CAACE,WAAP,CAAmBH,KAAnB,EADgC,CAGlC;AACC,GAJD,MAIO,IAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AACpCI,IAAAA,YAAY,CAACJ,KAAD,EAAQC,MAAR,CAAZ,CADoC,CAGtC;AACC,GAJM,MAIA,IAAID,KAAJ,EAAW;AAChBC,IAAAA,MAAM,CAACI,SAAP,GAAmBL,KAAnB;AACD;AACF,CAbM;;AAeP,MAAMI,YAAY,GAAG,CAACJ,KAAD,EAAQC,MAAR,KAAmB;AACtC;AACA,MAAID,KAAK,CAACM,MAAV,EAAkB;AAChBC,IAAAA,gBAAgB,CAACN,MAAD,EAASD,KAAT,CAAhB,CADgB,CAGlB;AACC,GAJD,MAIO;AACLC,IAAAA,MAAM,CAACI,SAAP,GAAmBL,KAAK,CAACQ,QAAN,EAAnB;AACD;AACF,CATD;;AAWA,MAAMD,gBAAgB,GAAG,CAACN,MAAD,EAASQ,IAAT,KAAkB;AACzCR,EAAAA,MAAM,CAACI,SAAP,GAAmB,EAAnB;;AACA,MAAI,KAAKI,IAAT,EAAe;AACb,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAID,IAArB,EAA2BC,CAAC,EAA5B,EAAgC;AAC9BT,MAAAA,MAAM,CAACE,WAAP,CAAmBM,IAAI,CAACC,CAAD,CAAJ,CAAQC,SAAR,CAAkB,IAAlB,CAAnB;AACD;AACF,GAJD,MAIO;AACLV,IAAAA,MAAM,CAACE,WAAP,CAAmBM,IAAI,CAACE,SAAL,CAAe,IAAf,CAAnB;AACD;AACF,CATD","sourcesContent":["export const parseHtmlToContainer = (param, target) => {\n  // DOM element\n  if (param instanceof HTMLElement) {\n    target.appendChild(param)\n\n  // Object\n  } else if (typeof param === 'object') {\n    handleObject(param, target)\n\n  // Plain string\n  } else if (param) {\n    target.innerHTML = param\n  }\n}\n\nconst handleObject = (param, target) => {\n  // JQuery element(s)\n  if (param.jquery) {\n    handleJqueryElem(target, param)\n\n  // For other objects use their string representation\n  } else {\n    target.innerHTML = param.toString()\n  }\n}\n\nconst handleJqueryElem = (target, elem) => {\n  target.innerHTML = ''\n  if (0 in elem) {\n    for (let i = 0; i in elem; i++) {\n      target.appendChild(elem[i].cloneNode(true))\n    }\n  } else {\n    target.appendChild(elem.cloneNode(true))\n  }\n}\n"]},"metadata":{},"sourceType":"module"}