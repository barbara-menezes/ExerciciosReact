{"ast":null,"code":"var _jsxFileName = \"/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\n\nfunction CreateBeerForm() {\n  const [beerName, setUBeerName] = useState('');\n  const [beerNameError, setBeerNameError] = useState('');\n  const [beerType, setUBeerType] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [hasCorn, setHasCorn] = useState(false);\n  const [disable, setDisabled] = useState(true);\n  const firstRender = useRef(true);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    console.log(\"beerName:\" + beerName, \"beerName:\" + beerType, \"beerName:\" + hasCorn, \"beerName:\" + ingredients);\n    useEffect(() => {\n      if (firstRender.current) {\n        firstRender.current = false;\n        return;\n      }\n\n      setDisabled(formValidation());\n    }, [beerName, beerType, beerType]);\n\n    const formValidation = () => {\n      if (beerName === \"\") {\n        setBeerNameError('Name cant be blank!');\n        return true;\n      } else {\n        return false;\n      }\n    };\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, beerNameError && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, beerNameError), React.createElement(FormTextInput, {\n    value: beerName,\n    onChange: event => setUBeerName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  })), React.createElement(FormSelect, {\n    value: beerType,\n    onChange: event => setUBeerType(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(FormCheckbox, {\n    value: hasCorn,\n    onChange: event => setHasCorn(event.target.value ? event.target.checked : event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(FormTextArea, {\n    value: ingredients,\n    onChange: event => setIngredients(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    \"data-test\": \"formSubmit\",\n    name: \"formSubmit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default CreateBeerForm;","map":{"version":3,"sources":["/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx"],"names":["React","useState","useEffect","useRef","FormTextInput","FormSelect","FormCheckbox","FormTextArea","CreateBeerForm","beerName","setUBeerName","beerNameError","setBeerNameError","beerType","setUBeerType","ingredients","setIngredients","hasCorn","setHasCorn","disable","setDisabled","firstRender","handleSubmit","event","preventDefault","console","log","current","formValidation","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\n\nfunction CreateBeerForm() {\n\n    const [beerName, setUBeerName] = useState('');\n    const [beerNameError, setBeerNameError] = useState('')\n    const [beerType, setUBeerType] = useState('');\n    const [ingredients, setIngredients] = useState('');\n    const [hasCorn, setHasCorn] = useState(false);\n    const [disable, setDisabled] = useState(true);\n    const firstRender = useRef(true);\n\n    const handleSubmit = (event: any) => {\n        event.preventDefault();\n        console.log(\n            \"beerName:\" + beerName,\n            \"beerName:\" + beerType,\n            \"beerName:\" + hasCorn,\n            \"beerName:\" + ingredients\n        );\n        useEffect(() => {\n\n            if (firstRender.current) {\n                firstRender.current = false\n                return\n            }\n\n            setDisabled(formValidation())\n\n        }, [beerName, beerType, beerType]);\n\n        const formValidation = () => {\n            if (beerName === \"\") {\n                setBeerNameError('Name cant be blank!')\n                return true\n            } else {\n                return false\n            }\n        }\n    };\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <div>\n                {beerNameError && <p>{beerNameError}</p>}\n                <FormTextInput value={beerName} onChange={event => setUBeerName(event.target.value)} />\n            </div>\n            <FormSelect value={beerType} onChange={event => setUBeerType(event.target.value)} />\n            <FormCheckbox value={hasCorn}\n                onChange={event =>\n                    setHasCorn(event.target.value ? event.target.checked : event.target.value)\n                }\n            />\n            <FormTextArea value={ingredients} onChange={event => setIngredients(event.target.value)} />\n            <button type=\"submit\" data-test=\"formSubmit\" name=\"formSubmit\">Submit</button>\n        </form>\n    )\n}\n\nexport default CreateBeerForm;"]},"metadata":{},"sourceType":"module"}