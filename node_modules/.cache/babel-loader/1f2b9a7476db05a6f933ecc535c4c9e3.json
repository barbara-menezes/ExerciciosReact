{"ast":null,"code":"var _jsxFileName = \"/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\n\nfunction CreateBeerForm() {\n  const [beerName, setBeerName] = useState('');\n  const [beerNameError, setBeerNameError] = useState('');\n  const [beerType, setBeerType] = useState('');\n  const [beerTypeError, setBeerTypeError] = useState('');\n  const [hasCorn, setHasCorn] = useState(false);\n  const [ingredients, setIngredients] = useState('');\n  const [ingredientsError, setIngredientsError] = useState('');\n  const [disable, setDisabled] = useState(true);\n  const firstRender = useRef(true);\n  useEffect(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n\n    setDisabled(formValidation());\n  }, [beerName, beerType, ingredients]);\n\n  const formValidation = () => {\n    let counter = 0;\n\n    if (beerName === \"\") {\n      setBeerNameError('Beer Name cannot be empty');\n      counter++;\n    } else {\n      setBeerNameError('');\n    }\n\n    if (beerType === \"\") {\n      setBeerTypeError('Beer Type cannot be empty');\n      counter++;\n    } else {\n      setBeerTypeError('');\n    }\n\n    if (ingredients === \"\") {\n      setIngredientsError('Ingredients cannot be empty');\n      counter++;\n    } else {\n      setIngredientsError('');\n    }\n\n    if (counter === 0) {\n      return false;\n    } else {\n      return true;\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    console.log(\"beerName:\" + beerName, \"beerName:\" + beerType, \"beerName:\" + hasCorn, \"beerName:\" + ingredients);\n  };\n\n  return React.createElement(\"form\", {\n    className: \"form\",\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, beerNameError && React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, beerNameError), React.createElement(FormTextInput, {\n    value: beerName,\n    onChange: event => setBeerName(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, beerTypeError && React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, beerTypeError), React.createElement(FormSelect, {\n    value: beerType,\n    onChange: event => setBeerType(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(FormCheckbox, {\n    value: hasCorn,\n    onChange: event => setHasCorn(event.target.value ? event.target.checked : event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, ingredientsError && React.createElement(\"p\", {\n    style: {\n      color: \"red\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, ingredientsError), React.createElement(FormTextArea, {\n    value: ingredients,\n    onChange: event => setIngredients(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })), React.createElement(\"button\", {\n    disabled: disable,\n    type: \"submit\",\n    \"data-test\": \"formSubmit\",\n    name: \"formSubmit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Submit\"));\n}\n\nexport default CreateBeerForm;","map":{"version":3,"sources":["/home/bmenezes/ExerciciosReact/src/components/CreateBeerForm/CreateBeerForm.tsx"],"names":["React","useState","useRef","useEffect","FormTextInput","FormSelect","FormCheckbox","FormTextArea","CreateBeerForm","beerName","setBeerName","beerNameError","setBeerNameError","beerType","setBeerType","beerTypeError","setBeerTypeError","hasCorn","setHasCorn","ingredients","setIngredients","ingredientsError","setIngredientsError","disable","setDisabled","firstRender","current","formValidation","counter","onSubmit","event","preventDefault","console","log","color","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport FormTextInput from '../Form_Components/FormTextInput';\nimport FormSelect from '../Form_Components/FormSelect';\nimport FormCheckbox from '../Form_Components/FormCheckbox';\nimport FormTextArea from '../Form_Components/FormTextArea';\n\nfunction CreateBeerForm() {\n\n    const [beerName, setBeerName] = useState('');\n    const [beerNameError, setBeerNameError] = useState('');\n    const [beerType, setBeerType] = useState('');\n    const [beerTypeError, setBeerTypeError] = useState('');\n    const [hasCorn, setHasCorn] = useState(false);\n    const [ingredients, setIngredients] = useState('');\n    const [ingredientsError, setIngredientsError] = useState('');\n    const [disable, setDisabled] = useState(true);\n    const firstRender = useRef(true);\n\n    useEffect(() => {\n        if (firstRender.current) {\n            firstRender.current = false\n            return\n        }\n        setDisabled(formValidation())\n\n    }, [beerName, beerType, ingredients])\n\n    const formValidation = () => {\n        let counter = 0;\n\n        if (beerName === \"\") {\n            setBeerNameError('Beer Name cannot be empty');\n            counter++;\n        } else {\n            setBeerNameError('');\n        }\n\n        if (beerType === \"\") {\n            setBeerTypeError('Beer Type cannot be empty')\n            counter++;\n        }\n        else {\n            setBeerTypeError('');\n        }\n\n        if (ingredients === \"\") {\n            setIngredientsError('Ingredients cannot be empty')\n            counter++;\n        }\n        else {\n            setIngredientsError('');\n        }\n\n        if (counter === 0) {\n            return false;\n        } else {\n            return true;\n        }\n\n    }\n\n    const onSubmit = (event: any) => {\n        event.preventDefault();\n        console.log(\n            \"beerName:\" + beerName,\n            \"beerName:\" + beerType,\n            \"beerName:\" + hasCorn,\n            \"beerName:\" + ingredients\n        );\n    };\n\n    return (\n        <form className=\"form\" onSubmit={onSubmit}>\n            <div>\n                {beerNameError && <p style={{color: \"red\"}}>{beerNameError}</p>}\n                <FormTextInput value={beerName} onChange={event => setBeerName(event.target.value)} />\n            </div>\n            <div>\n                {beerTypeError && <p style={{color: \"red\"}}>{beerTypeError}</p>}\n                <FormSelect value={beerType} onChange={event => setBeerType(event.target.value)} />\n            </div>\n            <div>\n                <FormCheckbox value={hasCorn} onChange={event => setHasCorn(event.target.value ? event.target.checked : event.target.value)} />\n            </div>\n            <div>\n                {ingredientsError && <p style={{color: \"red\"}}>{ingredientsError}</p>}\n                <FormTextArea value={ingredients} onChange={event => setIngredients(event.target.value)} />\n            </div>\n            <button disabled={disable} type=\"submit\" data-test=\"formSubmit\" name=\"formSubmit\" >Submit</button>\n        </form>\n    )\n}\n\nexport default CreateBeerForm;"]},"metadata":{},"sourceType":"module"}