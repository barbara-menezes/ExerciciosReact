{"ast":null,"code":"import { swalClasses } from '../../classes.js';\nimport * as dom from '../../dom/index.js';\nimport { capitalizeFirstLetter } from '../../utils.js';\nexport const renderActions = (instance, params) => {\n  const actions = dom.getActions();\n  const confirmButton = dom.getConfirmButton();\n  const cancelButton = dom.getCancelButton(); // Actions (buttons) wrapper\n\n  if (!params.showConfirmButton && !params.showCancelButton) {\n    dom.hide(actions);\n  } // Custom class\n\n\n  dom.applyCustomClass(actions, params, 'actions'); // Render confirm button\n\n  renderButton(confirmButton, 'confirm', params); // render Cancel Button\n\n  renderButton(cancelButton, 'cancel', params);\n\n  if (params.buttonsStyling) {\n    handleButtonsStyling(confirmButton, cancelButton, params);\n  } else {\n    dom.removeClass([confirmButton, cancelButton], swalClasses.styled);\n    confirmButton.style.backgroundColor = confirmButton.style.borderLeftColor = confirmButton.style.borderRightColor = '';\n    cancelButton.style.backgroundColor = cancelButton.style.borderLeftColor = cancelButton.style.borderRightColor = '';\n  }\n\n  if (params.reverseButtons) {\n    confirmButton.parentNode.insertBefore(cancelButton, confirmButton);\n  }\n};\n\nfunction handleButtonsStyling(confirmButton, cancelButton, params) {\n  dom.addClass([confirmButton, cancelButton], swalClasses.styled); // Buttons background colors\n\n  if (params.confirmButtonColor) {\n    confirmButton.style.backgroundColor = params.confirmButtonColor;\n  }\n\n  if (params.cancelButtonColor) {\n    cancelButton.style.backgroundColor = params.cancelButtonColor;\n  } // Loading state\n\n\n  const confirmButtonBackgroundColor = window.getComputedStyle(confirmButton).getPropertyValue('background-color');\n  confirmButton.style.borderLeftColor = confirmButtonBackgroundColor;\n  confirmButton.style.borderRightColor = confirmButtonBackgroundColor;\n}\n\nfunction renderButton(button, buttonType, params) {\n  dom.toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block');\n  button.innerHTML = params[`${buttonType}ButtonText`]; // Set caption text\n\n  button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]); // ARIA label\n  // Add buttons custom classes\n\n  button.className = swalClasses[buttonType];\n  dom.applyCustomClass(button, params, `${buttonType}Button`);\n  dom.addClass(button, params[`${buttonType}ButtonClass`]);\n}","map":{"version":3,"sources":["/home/bmenezes/my-app/node_modules/sweetalert2/src/utils/dom/renderers/renderActions.js"],"names":["swalClasses","dom","capitalizeFirstLetter","renderActions","instance","params","actions","getActions","confirmButton","getConfirmButton","cancelButton","getCancelButton","showConfirmButton","showCancelButton","hide","applyCustomClass","renderButton","buttonsStyling","handleButtonsStyling","removeClass","styled","style","backgroundColor","borderLeftColor","borderRightColor","reverseButtons","parentNode","insertBefore","addClass","confirmButtonColor","cancelButtonColor","confirmButtonBackgroundColor","window","getComputedStyle","getPropertyValue","button","buttonType","toggle","innerHTML","setAttribute","className"],"mappings":"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","sourcesContent":["import { swalClasses } from '../../classes.js'\nimport * as dom from '../../dom/index.js'\nimport { capitalizeFirstLetter } from '../../utils.js'\n\nexport const renderActions = (instance, params) => {\n  const actions = dom.getActions()\n  const confirmButton = dom.getConfirmButton()\n  const cancelButton = dom.getCancelButton()\n\n  // Actions (buttons) wrapper\n  if (!params.showConfirmButton && !params.showCancelButton) {\n    dom.hide(actions)\n  }\n\n  // Custom class\n  dom.applyCustomClass(actions, params, 'actions')\n\n  // Render confirm button\n  renderButton(confirmButton, 'confirm', params)\n  // render Cancel Button\n  renderButton(cancelButton, 'cancel', params)\n\n  if (params.buttonsStyling) {\n    handleButtonsStyling(confirmButton, cancelButton, params)\n  } else {\n    dom.removeClass([confirmButton, cancelButton], swalClasses.styled)\n    confirmButton.style.backgroundColor = confirmButton.style.borderLeftColor = confirmButton.style.borderRightColor = ''\n    cancelButton.style.backgroundColor = cancelButton.style.borderLeftColor = cancelButton.style.borderRightColor = ''\n  }\n\n  if (params.reverseButtons) {\n    confirmButton.parentNode.insertBefore(cancelButton, confirmButton)\n  }\n}\n\nfunction handleButtonsStyling (confirmButton, cancelButton, params) {\n  dom.addClass([confirmButton, cancelButton], swalClasses.styled)\n\n  // Buttons background colors\n  if (params.confirmButtonColor) {\n    confirmButton.style.backgroundColor = params.confirmButtonColor\n  }\n  if (params.cancelButtonColor) {\n    cancelButton.style.backgroundColor = params.cancelButtonColor\n  }\n\n  // Loading state\n  const confirmButtonBackgroundColor = window.getComputedStyle(confirmButton).getPropertyValue('background-color')\n  confirmButton.style.borderLeftColor = confirmButtonBackgroundColor\n  confirmButton.style.borderRightColor = confirmButtonBackgroundColor\n}\n\nfunction renderButton (button, buttonType, params) {\n  dom.toggle(button, params[`show${capitalizeFirstLetter(buttonType)}Button`], 'inline-block')\n  button.innerHTML = params[`${buttonType}ButtonText`] // Set caption text\n  button.setAttribute('aria-label', params[`${buttonType}ButtonAriaLabel`]) // ARIA label\n\n  // Add buttons custom classes\n  button.className = swalClasses[buttonType]\n  dom.applyCustomClass(button, params, `${buttonType}Button`)\n  dom.addClass(button, params[`${buttonType}ButtonClass`])\n}\n"]},"metadata":{},"sourceType":"module"}